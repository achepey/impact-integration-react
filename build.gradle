buildscript {
	dependencies {
		classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}

plugins {
	id 'io.spring.dependency-management' version '1.0.0.RC2'
	id 'com.moowork.node' version '1.1.1'
	id 'org.springframework.boot' version '1.5.7.RELEASE'
}

group 'impact.integration'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

sourceCompatibility = 1.8

repositories {
	mavenLocal()

	mavenCentral()

	maven {
		url "https://repo.spring.io/libs-milestone"
	}
}

dependencyManagement {
	imports {
		mavenBom 'io.spring.platform:platform-bom:Brussels-SR4'
		mavenBom 'org.apache.logging.log4j:log4j-bom:2.7'
	}
}

dependencies {
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.14'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'

	compile group: 'org.mariadb.jdbc', name:'mariadb-java-client:1.4.6'
	runtime group: 'mysql', name:'mysql-connector-java'

	compile group: 'org.apache.logging.log4j', name: 'log4j-api'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core'
	compile group: 'org.apache.logging.log4j', name: 'log4j-jcl'
	compile group: 'org.apache.logging.log4j', name: 'log4j-jul'
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl'
	compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api'

	compile group: 'org.elasticsearch.client', name: 'transport', version: '5.1.1'

	testCompile group: 'junit', name: 'junit'
}

configurations.all {
	exclude group: "log4j", module: "log4j"
	exclude group: "org.slf4j", module: "slf4j-log4j12"
	exclude group: "org.slf4j", module: "jcl-over-slf4j"
	exclude group: "org.slf4j", module: "jul-to-slf4j"
	exclude group: "org.slf4j", module: "log4j-over-slf4j"
	exclude group: "junit", module: "junit-dep"
	exclude group: 'ch.qos.logback'
}

def isNpmInstalled() {
	try {
		exec {
			commandLine "npm", "--version"
		}
	} catch (Exception e) {
		return false
	}

	return true
}

node {
	if (isNpmInstalled()) {
		download = false
	} else {
		version = '7.7.3'
		npmVersion = '4.1.2'
		download = true
	}
}

task impactInstall(type: NpmTask) {
	args = ['install']
}

task webpack(type: NpmTask, dependsOn: 'impactInstall') {
	if (project.hasProperty("release")) {
		args = ['run', 'build-release']
	} else {
		args = ['run', 'build']
	}
}

task testJs(type: NpmTask) {
	args = ['test']
}

processResources {
	from ('build/statics') {
		include '*.*'
		exclude 'index.html'
		into 'statics'
	}
}

tasks.processResources.dependsOn webpack